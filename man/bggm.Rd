\name{bggm}
\alias{bggm}
\title{Bayesian Gaussian Graphical Models}
\description{
Fits some models based on the generalized approach to BGGMs proposed by Franco et al. (2023). The statistical fit is carried out by the `MCMC` function of the `YABS` package.
}
\usage{
bggm(data, reg=NULL, cor=NULL, sparse=NULL, full=FALSE, ...)
}
\arguments{
   \item{data}{The data frame or numeric matrix. If the data is ordered discrete, than the smallest possible value for each variable should be 0.}
   \item{reg}{The regularization prior that should be used. Defaults to "normal". The other possible values are: "normal", "laplace", "logistic", "cauchy", "t", and "lomax". For more details regarding these priors, see: https://doi.org/10.31234/osf.io/4s6fh}
   \item{cor}{The type of correlation to be estimated. Defaults to "pearson". The other possible values are: "pearson", "spearman", and "poly".}
   \item{sparse}{Boolean. If sparse=TRUE, a sparse model is fitted. If sparse=FALSE, then a non-sparse model is fitted.}
   \item{full}{Boolean. If full=TRUE, the complete output generated by the `MCMC` function is returned. If full=FALSE, only the samples of the main parameters and the MAP estimates are returned.}
   \item{...}{Further arguments to be passed to `MCMC`.}
}
\value{
A list of class bggm containing:
1. R_hat, the MAP estimate of the correlation matrix;
2. Rho_hat, the MAP estimate of the partial correlation matrix;
3. sample_R_hat, the posterior samples of the correlation matrix;
4. sample_Rho_hat, the posterior samples of the partial correlation;

If full=TRUE, also:
5. full_output, the complete output generated by the `MCMC` function;

And if sparse=TRUE, also;
6. Delta_hat, the MAP estimate of the probability of inclusion of each edge;
7. sample_Delta_hat, the posterior samples of the Delta_hat.
}
\references{
Franco, V. R., Barros, G. W., & Jimenez, M. (2023). A Generalized Approach for Bayesian Gaussian Graphical Models. https://doi.org/10.31234/osf.io/4s6fh
}
\examples{##### Fit all models with a toy simulation
## Load the package
require(gbggm)

### Data====
# Seed for reproducibility
set.seed(3)
# Sample size
N <- 200
# Fixed correlations
b1 <- .3; b2 <- .7
# Correlation matrix implied by the chain DAG: x1 -> x2 -> x3
Sigma <- matrix(c(    1, b1, b1*b2,
                     b1,  1,    b2,
                  b1*b2, b2,     1), byrow=T, nrow=3, ncol=3)
# The implied partial correlation matrix
pTrue <- pcor(Sigma)
# The number of variables
V <- ncol(Sigma)
# Random multivariate normal data
X <- MASS::mvrnorm(N, rep(0, V), Sigma, empirical=T)
# Dichotomization
D <- {X > 0} * 1

### FIT GBGGMs====
# Normal prior
fit0 <- gbggm::bggm(D, reg="normal", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
# Laplace prior
fit1 <- gbggm::bggm(D, reg="laplace", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
# Logistic prior
fit2 <- gbggm::bggm(D, reg="logistic", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
# Cauchy prior
fit3 <- gbggm::bggm(D, reg="cauchy", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
# Three-parameter t prior
fit4 <- gbggm::bggm(D, reg="t", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
# Double lomax prior
fit5 <- gbggm::bggm(D, reg="lomax", cor="poly", iterations=5000, parallel=T, cores=5, nchains=5,
                    burnin=1000, adapt=5000, status=100, thinning=1, algo="barker")
}
